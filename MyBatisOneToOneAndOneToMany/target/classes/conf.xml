<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "mybatis-3-config.dtd" >
<configuration>

    <!--配置加载properties文件
        定义在properties标签内部的属性优先与文件本身被读取
        然后读取resource 或 url 加载的属性，他会覆盖已有的同名属性
        左后再读取parameter 传递的属性，他会覆盖已有的同名属性
    -->
    <properties resource="db.properties">
        <!--<property name="aaa" value="aaa"></property>-->
    </properties>

    <!--定义别名-->
    <typeAliases>
        <!--1、单个别名的定义-->
        <!--<typeAlias type="com.bean.Student" alias="Student"></typeAlias>-->
        <typeAlias type="java.lang.String" alias="String"></typeAlias>
        <!--2、批量别名的定义-->
        <package name="com.bean"></package>
    </typeAliases>

    <!-- 可以配置多个运行环境，但是每个SqlSessionFactory 实例只能选择一个运行环境 -->
    <environments default="work">
        <environment id="work">
            <transactionManager type="JDBC"></transactionManager>
            <!-- UNPOOLED POOLED JNDI -->
            <dataSource type="POOLED">
                <property name="driver" value="${driver}" />
                <property name="url" value="${url}" />
                <property name="username" value="${username}" />
                <property name="password" value="${password}" />
            </dataSource>
        </environment>
    </environments>
    <!--加载配置文件-->
    <mappers>
        <!--通过配置文件名直接加载-->
        <!--<mapper resource="mapper/StudentMapper.xml"/>-->

        <!--还可以通过mapper映射来加载，即创建的dao接口.
        相同的，Mapper映射类必须遵守同样的规范:
        要将xml文件和需要映射的Mapper类放在同一个目录
        -->
        <!--<mapper class="com.dao.StudentMapper"></mapper>-->
        <package name="com.dao"></package>
    </mappers>
</configuration>